/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/entry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./node_modules/sanitize.css/sanitize.css":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./node_modules/postcss-loader/src??ref--5-2!./node_modules/sass-loader/lib/loader.js??ref--5-3!./node_modules/sanitize.css/sanitize.css ***!
  \***********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(true);
// imports


// module
exports.push([module.i, "/*! sanitize.css v7.0.3 | CC0 License | github.com/csstools/sanitize.css */\n/* Document\n * ========================================================================== */\n/**\n * 1. Remove repeating backgrounds in all browsers (opinionated).\n * 2. Add border box sizing in all browsers (opinionated).\n */\n*,\n::before,\n::after {\n  background-repeat: no-repeat;\n  /* 1 */\n  box-sizing: border-box;\n  /* 2 */ }\n\n/**\n * 1. Add text decoration inheritance in all browsers (opinionated).\n * 2. Add vertical alignment inheritance in all browsers (opinionated).\n */\n::before,\n::after {\n  text-decoration: inherit;\n  /* 1 */\n  vertical-align: inherit;\n  /* 2 */ }\n\n/**\n * 1. Use the default cursor in all browsers (opinionated).\n * 2. Use the default user interface font in all browsers (opinionated).\n * 3. Correct the line height in all browsers.\n * 4. Use a 4-space tab width in all browsers (opinionated).\n * 5. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n * 6. Breaks words to prevent overflow in all browsers (opinionated).\n */\nhtml {\n  cursor: default;\n  /* 1 */\n  font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  /* 2 */\n  line-height: 1.15;\n  /* 3 */\n  -moz-tab-size: 4;\n  /* 4 */\n  -o-tab-size: 4;\n     tab-size: 4;\n  /* 4 */\n  -ms-text-size-adjust: 100%;\n  /* 5 */\n  -webkit-text-size-adjust: 100%;\n  /* 5 */\n  word-break: break-word;\n  /* 6 */ }\n\n/* Sections\n * ========================================================================== */\n/**\n * Remove the margin in all browsers (opinionated).\n */\nbody {\n  margin: 0; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/* Grouping content\n * ========================================================================== */\n/**\n * 1. Add the correct sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/**\n * Add the correct display in IE.\n */\nmain {\n  display: block; }\n\n/**\n * Remove the list style on navigation lists in all browsers (opinionated).\n */\nnav ol,\nnav ul {\n  list-style: none; }\n\n/**\n * 1. Use the default monospace user interface font\n *    in all browsers (opinionated).\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Noto Mono, Oxygen Mono, Liberation Mono, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/* Text-level semantics\n * ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent; }\n\n/**\n * Add the correct text decoration in Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  text-decoration: underline;\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * 1. Use the default monospace user interface font\n *    in all browsers (opinionated).\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: Menlo, Consolas, Roboto Mono, Ubuntu Monospace, Noto Mono, Oxygen Mono, Liberation Mono, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/*\n * Remove the text shadow on text selections in Firefox 61- (opinionated).\n * 1. Restore the coloring undone by defining the text shadow\n *    in all browsers (opinionated).\n */\n::-moz-selection {\n  background-color: #b3d4fc;\n  /* 1 */\n  color: #000;\n  /* 1 */\n  text-shadow: none; }\n\n::selection {\n  background-color: #b3d4fc;\n  /* 1 */\n  color: #000;\n  /* 1 */\n  text-shadow: none; }\n\n/* Embedded content\n * ========================================================================== */\n/*\n * Change the alignment on media elements in all browers (opinionated).\n */\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle; }\n\n/**\n * Add the correct display in IE 9-.\n */\naudio,\nvideo {\n  display: inline-block; }\n\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\nimg {\n  border-style: none; }\n\n/**\n * Change the fill color to match the text color in all browsers (opinionated).\n */\nsvg:not([fill]) {\n  fill: currentColor; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Tabular data\n * ========================================================================== */\n/**\n * Collapse border spacing in all browsers (opinionated).\n */\ntable {\n  border-collapse: collapse; }\n\n/* Forms\n * ========================================================================== */\n/**\n * Inherit styling in all browsers (opinionated).\n */\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit; }\n\n/**\n * Remove the margin in Safari.\n */\nbutton,\ninput,\nselect {\n  margin: 0; }\n\n/**\n * 1. Show the overflow in IE.\n * 2. Remove the inheritance of text transform in Edge, Firefox, and IE.\n */\nbutton {\n  overflow: visible;\n  /* 1 */\n  text-transform: none;\n  /* 2 */ }\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; }\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em; }\n\n/**\n * Show the overflow in Edge and IE.\n */\ninput {\n  overflow: visible; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n */\nlegend {\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * 1. Add the correct display in Edge and IE.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\nselect {\n  text-transform: none; }\n\n/**\n * 1. Remove the margin in Firefox and Safari.\n * 2. Remove the default vertical scrollbar in IE.\n * 3. Change the resize direction on textareas in all browsers (opinionated).\n */\ntextarea {\n  margin: 0;\n  /* 1 */\n  overflow: auto;\n  /* 2 */\n  resize: vertical;\n  /* 3 */ }\n\n/**\n * Remove the padding in IE 10-.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  padding: 0; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Safari.\n */\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54; }\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/**\n * Remove the inner border and padding of focus outlines in Firefox.\n */\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus outline styles unset by the previous rule in Firefox.\n */\n:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/* Interactive\n * ========================================================================== */\n/*\n * Add the correct display in Edge and IE.\n */\ndetails {\n  display: block; }\n\n/*\n * Add the correct styles in Edge, IE, and Safari.\n */\ndialog {\n  background-color: white;\n  border: solid;\n  color: black;\n  display: block;\n  height: -moz-fit-content;\n  height: -webkit-fit-content;\n  height: fit-content;\n  left: 0;\n  margin: auto;\n  padding: 1em;\n  position: absolute;\n  right: 0;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content; }\n\ndialog:not([open]) {\n  display: none; }\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item; }\n\n/* Scripting\n * ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n */\ncanvas {\n  display: inline-block; }\n\n/**\n * Add the correct display in IE.\n */\ntemplate {\n  display: none; }\n\n/* User interaction\n * ========================================================================== */\n/*\n * 1. Remove the tapping delay in IE 10.\n * 2. Remove the tapping delay on clickable elements\n      in all browsers (opinionated).\n */\na,\narea,\nbutton,\ninput,\nlabel,\nselect,\nsummary,\ntextarea,\n[tabindex] {\n  /* 1 */\n  touch-action: manipulation;\n  /* 2 */ }\n\n/**\n * Add the correct display in IE 10-.\n */\n[hidden] {\n  display: none; }\n\n/* Accessibility\n * ========================================================================== */\n/**\n * Change the cursor on busy elements in all browsers (opinionated).\n */\n[aria-busy=\"true\"] {\n  cursor: progress; }\n\n/*\n * Change the cursor on control elements in all browsers (opinionated).\n */\n[aria-controls] {\n  cursor: pointer; }\n\n/*\n * Change the cursor on disabled, not-editable, or otherwise\n * inoperable elements in all browsers (opinionated).\n */\n[aria-disabled=\"true\"],\n[disabled] {\n  cursor: not-allowed; }\n\n/*\n * Change the display on visually hidden accessible elements\n * in all browsers (opinionated).\n */\n[aria-hidden=\"false\"][hidden]:not(:focus) {\n  clip: rect(0, 0, 0, 0);\n  display: inherit;\n  position: absolute; }\n", "", {"version":3,"sources":["/Users/otsuka/Desktop/_mydata/sample_entry_sheet/entry_sheet/node_modules/sanitize.css/sanitize.css"],"names":[],"mappings":"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","file":"sanitize.css","sourcesContent":["/*! sanitize.css v7.0.3 | CC0 License | github.com/csstools/sanitize.css */\n\n/* Document\n * ========================================================================== */\n\n/**\n * 1. Remove repeating backgrounds in all browsers (opinionated).\n * 2. Add border box sizing in all browsers (opinionated).\n */\n\n*,\n::before,\n::after {\n  background-repeat: no-repeat; /* 1 */\n  box-sizing: border-box; /* 2 */\n}\n\n/**\n * 1. Add text decoration inheritance in all browsers (opinionated).\n * 2. Add vertical alignment inheritance in all browsers (opinionated).\n */\n\n::before,\n::after {\n  text-decoration: inherit; /* 1 */\n  vertical-align: inherit; /* 2 */\n}\n\n/**\n * 1. Use the default cursor in all browsers (opinionated).\n * 2. Use the default user interface font in all browsers (opinionated).\n * 3. Correct the line height in all browsers.\n * 4. Use a 4-space tab width in all browsers (opinionated).\n * 5. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n * 6. Breaks words to prevent overflow in all browsers (opinionated).\n */\n\nhtml {\n  cursor: default; /* 1 */\n  font-family:\n    system-ui,\n    /* macOS 10.11-10.12 */ -apple-system,\n    /* Windows 6+ */ Segoe UI,\n    /* Android 4+ */ Roboto,\n    /* Ubuntu 10.10+ */ Ubuntu,\n    /* Gnome 3+ */ Cantarell,\n    /* KDE Plasma 5+ */ Noto Sans,\n    /* fallback */ sans-serif,\n    /* macOS emoji */ \"Apple Color Emoji\",\n    /* Windows emoji */ \"Segoe UI Emoji\",\n    /* Windows emoji */ \"Segoe UI Symbol\",\n    /* Linux emoji */ \"Noto Color Emoji\"; /* 2 */\n\n  line-height: 1.15; /* 3 */\n  -moz-tab-size: 4; /* 4 */\n  tab-size: 4; /* 4 */\n  -ms-text-size-adjust: 100%; /* 5 */\n  -webkit-text-size-adjust: 100%; /* 5 */\n  word-break: break-word; /* 6 */\n}\n\n/* Sections\n * ========================================================================== */\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n * ========================================================================== */\n\n/**\n * 1. Add the correct sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * Add the correct display in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Remove the list style on navigation lists in all browsers (opinionated).\n */\n\nnav ol,\nnav ul {\n  list-style: none;\n}\n\n/**\n * 1. Use the default monospace user interface font\n *    in all browsers (opinionated).\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family:\n    /* macOS 10.10+ */ Menlo,\n    /* Windows 6+ */ Consolas,\n    /* Android 4+ */ Roboto Mono,\n    /* Ubuntu 10.10+ */ Ubuntu Monospace,\n    /* KDE Plasma 5+ */ Noto Mono,\n    /* KDE Plasma 4+ */ Oxygen Mono,\n    /* Linux/OpenOffice fallback */ Liberation Mono,\n    /* fallback */ monospace; /* 1 */\n\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n * ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Add the correct text decoration in Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Use the default monospace user interface font\n *    in all browsers (opinionated).\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family:\n    /* macOS 10.10+ */ Menlo,\n    /* Windows 6+ */ Consolas,\n    /* Android 4+ */ Roboto Mono,\n    /* Ubuntu 10.10+ */ Ubuntu Monospace,\n    /* KDE Plasma 5+ */ Noto Mono,\n    /* KDE Plasma 4+ */ Oxygen Mono,\n    /* Linux/OpenOffice fallback */ Liberation Mono,\n    /* fallback */ monospace; /* 1 */\n\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/*\n * Remove the text shadow on text selections in Firefox 61- (opinionated).\n * 1. Restore the coloring undone by defining the text shadow\n *    in all browsers (opinionated).\n */\n\n::-moz-selection {\n  background-color: #b3d4fc; /* 1 */\n  color: #000; /* 1 */\n  text-shadow: none;\n}\n\n::selection {\n  background-color: #b3d4fc; /* 1 */\n  color: #000; /* 1 */\n  text-shadow: none;\n}\n\n/* Embedded content\n * ========================================================================== */\n\n/*\n * Change the alignment on media elements in all browers (opinionated).\n */\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Change the fill color to match the text color in all browsers (opinionated).\n */\n\nsvg:not([fill]) {\n  fill: currentColor;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Tabular data\n * ========================================================================== */\n\n/**\n * Collapse border spacing in all browsers (opinionated).\n */\n\ntable {\n  border-collapse: collapse;\n}\n\n/* Forms\n * ========================================================================== */\n\n/**\n * Inherit styling in all browsers (opinionated).\n */\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n/**\n * Remove the margin in Safari.\n */\n\nbutton,\ninput,\nselect {\n  margin: 0;\n}\n\n/**\n * 1. Show the overflow in IE.\n * 2. Remove the inheritance of text transform in Edge, Firefox, and IE.\n */\n\nbutton {\n  overflow: visible; /* 1 */\n  text-transform: none; /* 2 */\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * Show the overflow in Edge and IE.\n */\n\ninput {\n  overflow: visible;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n */\n\nlegend {\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * 1. Add the correct display in Edge and IE.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\n\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Remove the margin in Firefox and Safari.\n * 2. Remove the default vertical scrollbar in IE.\n * 3. Change the resize direction on textareas in all browsers (opinionated).\n */\n\ntextarea {\n  margin: 0; /* 1 */\n  overflow: auto; /* 2 */\n  resize: vertical; /* 3 */\n}\n\n/**\n * Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  padding: 0;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Safari.\n */\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/**\n * Remove the inner border and padding of focus outlines in Firefox.\n */\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus outline styles unset by the previous rule in Firefox.\n */\n\n:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/* Interactive\n * ========================================================================== */\n\n/*\n * Add the correct display in Edge and IE.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct styles in Edge, IE, and Safari.\n */\n\ndialog {\n  background-color: white;\n  border: solid;\n  color: black;\n  display: block;\n  height: -moz-fit-content;\n  height: -webkit-fit-content;\n  height: fit-content;\n  left: 0;\n  margin: auto;\n  padding: 1em;\n  position: absolute;\n  right: 0;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content;\n}\n\ndialog:not([open]) {\n  display: none;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Scripting\n * ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\ncanvas {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/* User interaction\n * ========================================================================== */\n\n/*\n * 1. Remove the tapping delay in IE 10.\n * 2. Remove the tapping delay on clickable elements\n      in all browsers (opinionated).\n */\n\na,\narea,\nbutton,\ninput,\nlabel,\nselect,\nsummary,\ntextarea,\n[tabindex] {\n  -ms-touch-action: manipulation; /* 1 */\n  touch-action: manipulation; /* 2 */\n}\n\n/**\n * Add the correct display in IE 10-.\n */\n\n[hidden] {\n  display: none;\n}\n\n/* Accessibility\n * ========================================================================== */\n\n/**\n * Change the cursor on busy elements in all browsers (opinionated).\n */\n\n[aria-busy=\"true\"] {\n  cursor: progress;\n}\n\n/*\n * Change the cursor on control elements in all browsers (opinionated).\n */\n\n[aria-controls] {\n  cursor: pointer;\n}\n\n/*\n * Change the cursor on disabled, not-editable, or otherwise\n * inoperable elements in all browsers (opinionated).\n */\n\n[aria-disabled=\"true\"],\n[disabled] {\n  cursor: not-allowed;\n}\n\n/*\n * Change the display on visually hidden accessible elements\n * in all browsers (opinionated).\n */\n\n[aria-hidden=\"false\"][hidden]:not(:focus) {\n  clip: rect(0, 0, 0, 0);\n  display: inherit;\n  position: absolute;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./src/_scss/main.scss":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./node_modules/postcss-loader/src??ref--5-2!./node_modules/sass-loader/lib/loader.js??ref--5-3!./src/_scss/main.scss ***!
  \****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(true);
// imports
exports.i(__webpack_require__(/*! -!../../node_modules/css-loader??ref--5-1!../../node_modules/postcss-loader/src??ref--5-2!../../node_modules/sass-loader/lib/loader.js??ref--5-3!sanitize.css/sanitize.css */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./node_modules/sanitize.css/sanitize.css"), "");
exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Sawarabi+Mincho);", ""]);

// module
exports.push([module.i, "@charset \"UTF-8\";\nbody {\n  background-color: #fff;\n  color: #242424;\n  -webkit-font-smoothing: antialiased;\n  font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n  line-height: 1.4;\n  word-wrap: break-word; }\n\n@media screen {\n  h1 {\n    margin: 0 0 0.3em;\n    padding-bottom: 0.3em;\n    font-size: 2em;\n    border-bottom: 1px solid #eaecef; }\n  h2 {\n    padding-bottom: 0.3em;\n    font-size: 1.5em;\n    border-bottom: 1px solid #eaecef; }\n  h3 {\n    font-size: 1.25em; }\n  h4 {\n    font-size: 1em; }\n  h5 {\n    font-size: 0.875em; }\n  h6 {\n    font-size: 0.85em;\n    color: #6a737d; }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none; }\n  .container {\n    margin: 0 auto;\n    padding: 20px;\n    max-width: 768px; }\n  .name_img {\n    max-width: 100%; }\n  .timeTable_item {\n    list-style: none;\n    display: flex; }\n    .timeTable_item + .timeTable_item {\n      margin-top: 0.5em; }\n    .timeTable_item p {\n      margin: 0; }\n      .timeTable_item p + p {\n        margin-left: 0.5em; }\n    .timeTable_item.-center p {\n      font-size: 1.2em;\n      margin: 0.6em 0; }\n  .u-hide {\n    display: none; } }\n\n@media print {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    font-weight: normal; }\n  p {\n    margin: 0; }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none; }\n  .header {\n    margin-bottom: 3.7mm;\n    display: flex;\n    justify-content: space-between;\n    width: 66.66667%; }\n  .title {\n    font-size: 5.4mm;\n    letter-spacing: 1em;\n    font-weight: bold; }\n  .date {\n    font-size: 3mm;\n    line-height: 5.4mm; }\n  .contents {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n    padding-top: 17.5mm;\n    width: 153.8mm;\n    page-break-after: always; }\n  .section {\n    position: relative;\n    width: 100%;\n    border-top: 0.2mm solid #000;\n    border-left: 0.2mm solid #000;\n    border-right: 0.2mm solid #000; }\n    .section:last-child, .section.-last {\n      border-bottom: 0.2mm solid #000; }\n    .grid .section:nth-child(n+2) {\n      border-left: none; }\n    .grid .section:last-child {\n      border-bottom: none; }\n  .section_ttl {\n    padding: 2.5mm;\n    font-size: 2.5mm; }\n    .tel .section_ttl {\n      padding: 1.8mm 2.5mm; }\n  .section_txtContainer {\n    padding: 0 3.8mm 2.5mm;\n    font-size: 2.5mm; }\n    .tel .section_txtContainer {\n      padding: 2.5mm;\n      border-top: dotted 0.2mm #000; }\n    .myHope .section_txtContainer {\n      padding: 2.5mm 2.5mm 2.5mm 3.8mm;\n      height: 9mm;\n      border-top: 0.2mm solid #000; }\n  [data-ruby]::before {\n    content: \"\\3075\\308A\\304C\\306A\";\n    position: absolute;\n    top: 2mm;\n    left: 2.5mm;\n    font-size: 2.5mm;\n    line-height: 1; }\n  [data-ruby]::after {\n    content: attr(data-ruby);\n    position: absolute;\n    top: 2mm;\n    left: calc(2.5mm + 5em);\n    font-size: 2.5mm;\n    line-height: 1; }\n  rt {\n    display: none; }\n  .name {\n    padding-top: 6.3mm;\n    width: 66.8%; }\n  .name_ttl {\n    border-top: dotted 0.2mm #000; }\n  .name_txt {\n    font-size: 5.4mm; }\n  .name_img {\n    display: block;\n    position: absolute;\n    top: -9.3mm;\n    right: -41.3mm;\n    width: 30mm;\n    height: 40mm; }\n  .birthday {\n    width: 50%; }\n  .gender {\n    width: 16.8%;\n    border-left: none; }\n  .address {\n    padding-top: 6.3mm;\n    width: 75%;\n    min-height: 21.4mm; }\n  .address_ttl {\n    border-top: dotted 0.2mm #000; }\n  .address_notes {\n    position: absolute;\n    top: 8.3mm;\n    right: 2.5mm;\n    font-size: 2.5mm; }\n  .tel {\n    width: 25%;\n    border-left: none; }\n  .timeTable_container {\n    margin-top: 6.4mm; }\n    .timeTable_container + .timeTable_container {\n      margin-top: 0; }\n  .timeTable_ttl {\n    position: relative;\n    margin: 0;\n    text-align: center;\n    font-size: 2.5mm; }\n  .timeTable_item {\n    display: flex;\n    min-height: 9mm;\n    border-top: 0.2mm solid #000;\n    font-size: 2.5mm; }\n    .timeTable_item.-center {\n      text-align: center; }\n    .timeTable_item.-right {\n      text-align: right; }\n  .timeTable_list {\n    position: relative; }\n  .timeTable_year {\n    padding: 2.5mm 0;\n    width: 13.2mm;\n    text-align: center;\n    border-right: 0.2mm dotted #000; }\n  .timeTable_month {\n    padding: 2.5mm 0;\n    width: 9mm;\n    text-align: center;\n    border-right: 0.2mm solid #000; }\n  .timeTable_txt {\n    padding: 2.5mm;\n    flex: 1; }\n  .grid {\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 66.66667% 13.33333% 20%;\n        grid-template-columns: 66.66667% 13.33333% 20%;\n    margin: 6.4mm 0;\n    border-bottom: 0.2mm solid #000; }\n  .freeSpace {\n    -ms-grid-column: 1;\n    grid-column: 1;\n    -ms-grid-row: 1;\n    -ms-grid-row-span: 3;\n    grid-row: 1 / 4; }\n  .freeSpace_txt + .freeSpace_txt {\n    margin-top: 0.8em; }\n  .commutingTime {\n    -ms-grid-column: 2;\n    -ms-grid-column-span: 2;\n    grid-column: 2 / 4;\n    -ms-grid-row: 1;\n    grid-row: 1; }\n  .supportFamily {\n    -ms-grid-column: 2;\n    -ms-grid-column-span: 2;\n    grid-column: 2 / 4;\n    -ms-grid-row: 2;\n    grid-row: 2; } }\n", "", {"version":3,"sources":["/Users/otsuka/Desktop/_mydata/sample_entry_sheet/entry_sheet/src/_scss/main.scss","/Users/otsuka/Desktop/_mydata/sample_entry_sheet/entry_sheet/src/_scss/_base.scss","/Users/otsuka/Desktop/_mydata/sample_entry_sheet/entry_sheet/src/_scss/_settings.scss","/Users/otsuka/Desktop/_mydata/sample_entry_sheet/entry_sheet/src/_scss/_style.scss"],"names":[],"mappings":"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","file":"main.scss","sourcesContent":["@charset \"UTF-8\";\n@import url(~sanitize.css/sanitize.css);\n@import url(\"https://fonts.googleapis.com/css?family=Sawarabi+Mincho\");\nbody {\n  background-color: #fff;\n  color: #242424;\n  -webkit-font-smoothing: antialiased;\n  font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n  line-height: 1.4;\n  word-wrap: break-word; }\n\n@media screen {\n  h1 {\n    margin: 0 0 0.3em;\n    padding-bottom: 0.3em;\n    font-size: 2em;\n    border-bottom: 1px solid #eaecef; }\n  h2 {\n    padding-bottom: 0.3em;\n    font-size: 1.5em;\n    border-bottom: 1px solid #eaecef; }\n  h3 {\n    font-size: 1.25em; }\n  h4 {\n    font-size: 1em; }\n  h5 {\n    font-size: 0.875em; }\n  h6 {\n    font-size: 0.85em;\n    color: #6a737d; }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none; }\n  .container {\n    margin: 0 auto;\n    padding: 20px;\n    max-width: 768px; }\n  .name_img {\n    max-width: 100%; }\n  .timeTable_item {\n    list-style: none;\n    display: flex; }\n    .timeTable_item + .timeTable_item {\n      margin-top: 0.5em; }\n    .timeTable_item p {\n      margin: 0; }\n      .timeTable_item p + p {\n        margin-left: 0.5em; }\n    .timeTable_item.-center p {\n      font-size: 1.2em;\n      margin: 0.6em 0; }\n  .u-hide {\n    display: none; } }\n\n@media print {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    font-weight: normal; }\n  p {\n    margin: 0; }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none; }\n  .header {\n    margin-bottom: 3.7mm;\n    display: flex;\n    justify-content: space-between;\n    width: 66.66667%; }\n  .title {\n    font-size: 5.4mm;\n    letter-spacing: 1em;\n    font-weight: bold; }\n  .date {\n    font-size: 3mm;\n    line-height: 5.4mm; }\n  .contents {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n    padding-top: 17.5mm;\n    width: 153.8mm;\n    page-break-after: always; }\n  .section {\n    position: relative;\n    width: 100%;\n    border-top: 0.2mm solid #000;\n    border-left: 0.2mm solid #000;\n    border-right: 0.2mm solid #000; }\n    .section:last-child, .section.-last {\n      border-bottom: 0.2mm solid #000; }\n    .grid .section:nth-child(n+2) {\n      border-left: none; }\n    .grid .section:last-child {\n      border-bottom: none; }\n  .section_ttl {\n    padding: 2.5mm;\n    font-size: 2.5mm; }\n    .tel .section_ttl {\n      padding: 1.8mm 2.5mm; }\n  .section_txtContainer {\n    padding: 0 3.8mm 2.5mm;\n    font-size: 2.5mm; }\n    .tel .section_txtContainer {\n      padding: 2.5mm;\n      border-top: dotted 0.2mm #000; }\n    .myHope .section_txtContainer {\n      padding: 2.5mm 2.5mm 2.5mm 3.8mm;\n      height: 9mm;\n      border-top: 0.2mm solid #000; }\n  [data-ruby]::before {\n    content: \"ふりがな\";\n    position: absolute;\n    top: 2mm;\n    left: 2.5mm;\n    font-size: 2.5mm;\n    line-height: 1; }\n  [data-ruby]::after {\n    content: attr(data-ruby);\n    position: absolute;\n    top: 2mm;\n    left: calc(2.5mm + 5em);\n    font-size: 2.5mm;\n    line-height: 1; }\n  rt {\n    display: none; }\n  .name {\n    padding-top: 6.3mm;\n    width: 66.8%; }\n  .name_ttl {\n    border-top: dotted 0.2mm #000; }\n  .name_txt {\n    font-size: 5.4mm; }\n  .name_img {\n    display: block;\n    position: absolute;\n    top: -9.3mm;\n    right: -41.3mm;\n    width: 30mm;\n    height: 40mm; }\n  .birthday {\n    width: 50%; }\n  .gender {\n    width: 16.8%;\n    border-left: none; }\n  .address {\n    padding-top: 6.3mm;\n    width: 75%;\n    min-height: 21.4mm; }\n  .address_ttl {\n    border-top: dotted 0.2mm #000; }\n  .address_notes {\n    position: absolute;\n    top: 8.3mm;\n    right: 2.5mm;\n    font-size: 2.5mm; }\n  .tel {\n    width: 25%;\n    border-left: none; }\n  .timeTable_container {\n    margin-top: 6.4mm; }\n    .timeTable_container + .timeTable_container {\n      margin-top: 0; }\n  .timeTable_ttl {\n    position: relative;\n    margin: 0;\n    text-align: center;\n    font-size: 2.5mm; }\n  .timeTable_item {\n    display: flex;\n    min-height: 9mm;\n    border-top: 0.2mm solid #000;\n    font-size: 2.5mm; }\n    .timeTable_item.-center {\n      text-align: center; }\n    .timeTable_item.-right {\n      text-align: right; }\n  .timeTable_list {\n    position: relative; }\n  .timeTable_year {\n    padding: 2.5mm 0;\n    width: 13.2mm;\n    text-align: center;\n    border-right: 0.2mm dotted #000; }\n  .timeTable_month {\n    padding: 2.5mm 0;\n    width: 9mm;\n    text-align: center;\n    border-right: 0.2mm solid #000; }\n  .timeTable_txt {\n    padding: 2.5mm;\n    flex: 1; }\n  .grid {\n    display: grid;\n    grid-template-columns: 66.66667% 13.33333% 20%;\n    margin: 6.4mm 0;\n    border-bottom: 0.2mm solid #000; }\n  .freeSpace {\n    grid-column: 1;\n    grid-row: 1 / 4; }\n  .freeSpace_txt + .freeSpace_txt {\n    margin-top: 0.8em; }\n  .commutingTime {\n    grid-column: 2 / 4;\n    grid-row: 1; }\n  .supportFamily {\n    grid-column: 2 / 4;\n    grid-row: 2; } }\n","@import url('https://fonts.googleapis.com/css?family=Sawarabi+Mincho');\r\n\r\nbody {\r\n  background-color: $color-bg;\r\n  color: $color-font;\r\n  -webkit-font-smoothing: $font-smoothing;\r\n  font-smoothing: $font-smoothing;\r\n  -webkit-text-size-adjust: 100%;\r\n  line-height: $line-height;\r\n  word-wrap: break-word;\r\n}\r\n","// settings\r\n$color-bg: #fff;\r\n$color-font: #242424;\r\n\r\n$font-smoothing: antialiased; //antialiased, subpixel-antialiased, none\r\n$font-family: \"Sawarabi Mincho\", serif;\r\n$font-size: 62.5%;\r\n$line-height: 1.4;\r\n\r\n$bp-md: 737px;\r\n$bp-lg: 769px;","@media screen {\n\n  h1 {\n    margin: 0 0 0.3em;\n    padding-bottom: 0.3em;\n    font-size: 2em;\n    border-bottom: 1px solid #eaecef;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    font-size: 1.5em;\n    border-bottom: 1px solid #eaecef;\n  }\n\n  h3 {\n    font-size: 1.25em;\n  }\n\n  h4 {\n    font-size: 1em;\n  }\n\n  h5 {\n    font-size: 0.875em;\n  }\n\n  h6 {\n    font-size: 0.85em;\n    color: #6a737d;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .container {\n    margin: 0 auto;\n    padding: 20px;\n    max-width: 768px;\n  }\n\n  .name_img {\n    max-width: 100%;\n  }\n\n  .timeTable_item {\n    list-style: none;\n    display: flex;\n\n    & + .timeTable_item {\n      margin-top: 0.5em;\n    }\n\n    p {\n      margin: 0;\n\n      & + p {\n        margin-left: 0.5em;\n      }\n    }\n\n    &.-center {\n      p {\n        font-size: 1.2em;\n        margin: 0.6em 0;\n      }\n    }\n  }\n\n  .u-hide {\n    display: none;\n  }\n}\n\n@media print {\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    font-weight: normal;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .header {\n    margin-bottom: 3.7mm;\n    display: flex;\n    justify-content: space-between;\n    width: percentage(2/3);\n  }\n\n  .title {\n    font-size: 5.4mm;\n    letter-spacing: 1em;\n    font-weight: bold;\n  }\n\n  .date {\n    font-size: 3mm;\n    line-height: 5.4mm;\n  }\n\n  .contents {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n    padding-top: 17.5mm;\n    width: 153.8mm;\n    page-break-after: always;\n  }\n\n  .section {\n    position: relative;\n    width: 100%;\n    border-top: 0.2mm solid #000;\n    border-left: 0.2mm solid #000;\n    border-right: 0.2mm solid #000;\n\n    &:last-child,\n    &.-last {\n      border-bottom: 0.2mm solid #000;\n    }\n\n    .grid & {\n      &:nth-child(n+2) {\n        border-left: none;\n      }\n\n      &:last-child {\n        border-bottom: none;\n      }\n    }\n  }\n\n  .section_ttl {\n    padding: 2.5mm;\n    font-size: 2.5mm;\n\n    .tel & {\n      padding: 1.8mm 2.5mm;\n    }\n  }\n\n  .section_txtContainer {\n    padding: 0 3.8mm 2.5mm;\n    font-size: 2.5mm;\n\n    .tel & {\n      padding: 2.5mm;\n      border-top: dotted 0.2mm #000;\n    }\n\n    .myHope & {\n      padding: 2.5mm 2.5mm 2.5mm 3.8mm;\n      height: 9mm;\n      border-top: 0.2mm solid #000;\n    }\n  }\n\n  [data-ruby]::before {\n    content: (\"ふりがな\");\n    position: absolute;\n    top: 2mm;\n    left: 2.5mm;\n    font-size: 2.5mm;\n    line-height: 1;\n  }\n\n  [data-ruby]::after {\n    content: attr(data-ruby);\n    position: absolute;\n    top: 2mm;\n    left: calc(2.5mm + 5em);\n    font-size: 2.5mm;\n    line-height: 1;\n  }\n\n  rt {\n    display: none;\n  }\n\n  .name {\n    padding-top: 6.3mm;\n    width: 66.8%;\n  }\n\n  .name_ttl {\n    border-top: dotted 0.2mm #000;\n  }\n\n  .name_txt {\n    font-size: 5.4mm;\n  }\n\n  .name_img {\n    display: block;\n    position: absolute;\n    top: -9.3mm;\n    right: -41.3mm;\n    width: 30mm;\n    height: 40mm;\n  }\n\n  .birthday {\n    width: 50%;\n  }\n\n  .gender {\n    width: 16.8%;\n    border-left: none;\n  }\n\n  .address {\n    padding-top: 6.3mm;\n    width: 75%;\n    min-height: 21.4mm;\n  }\n\n  .address_ttl {\n    border-top: dotted 0.2mm #000;\n  }\n\n  .address_notes {\n    position: absolute;\n    top: 8.3mm;\n    right: 2.5mm;\n    font-size: 2.5mm;\n  }\n\n  .tel {\n    width: 25%;\n    border-left: none;\n  }\n\n  .timeTable_container {\n    margin-top: 6.4mm;\n\n    &+& {\n      margin-top: 0;\n    }\n  }\n\n  .timeTable_ttl {\n    position: relative;\n    margin: 0;\n    text-align: center;\n    font-size: 2.5mm;\n  }\n\n  .timeTable_item {\n    display: flex;\n    min-height: 9mm;\n    border-top: 0.2mm solid #000;\n    font-size: 2.5mm;\n\n    &.-center {\n      text-align: center;\n    }\n\n    &.-right {\n      text-align: right;\n    }\n  }\n\n  .timeTable_list {\n    position: relative;\n  }\n\n  .timeTable_year {\n    padding: 2.5mm 0;\n    width: 13.2mm;\n    text-align: center;\n    border-right: 0.2mm dotted #000;\n  }\n\n  .timeTable_month {\n    padding: 2.5mm 0;\n    width: 9mm;\n    text-align: center;\n    border-right: 0.2mm solid #000;\n  }\n\n  .timeTable_txt {\n    padding: 2.5mm;\n    flex: 1;\n  }\n\n  .grid {\n    display: grid;\n    grid-template-columns: percentage(2/3) percentage(0.4/3) percentage(0.6/3);\n    margin: 6.4mm 0;\n    border-bottom: 0.2mm solid #000;\n  }\n\n  .freeSpace {\n    grid-column: 1;\n    grid-row: 1 / 4;\n  }\n\n  .freeSpace_txt {\n    &+& {\n      margin-top: 0.8em;\n    }\n  }\n\n  .commutingTime {\n    grid-column: 2 / 4;\n    grid-row: 1;\n  }\n\n  .supportFamily {\n    grid-column: 2 / 4;\n    grid-row: 2;\n  }\n}"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./src/_scss/main.scss":
/*!*****************************!*\
  !*** ./src/_scss/main.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!../../node_modules/postcss-loader/src??ref--5-2!../../node_modules/sass-loader/lib/loader.js??ref--5-3!./main.scss */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/lib/loader.js?!./src/_scss/main.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/entry.js":
/*!**********************!*\
  !*** ./src/entry.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_scss/main.scss */ "./src/_scss/main.scss");
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scss_main_scss__WEBPACK_IMPORTED_MODULE_0__);
// css


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,